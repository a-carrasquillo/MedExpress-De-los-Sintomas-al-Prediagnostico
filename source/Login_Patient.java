import java.sql.*;
import javax.swing.JOptionPane;

/**GUI que nos permite realizar inicio de sesión como paciente
 *
 * @author a-carrasquillo
 */
public class Login_Patient extends javax.swing.JFrame {
    // constantes relacionadas a la base de datos
    private final String YOURPASSWORD = "YourPassWord";
    private final String DBUSER = "dbuser";
    
    /**Constructor por defecto
     * Crea un nuevo formulario Login_Patient
     */
    public Login_Patient() {
        initComponents();
        this.setLocationRelativeTo(null);
        // elimina el mensaje de error por defecto
        error.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        id = new java.awt.TextField();
        submit = new javax.swing.JButton();
        pwd = new javax.swing.JPasswordField();
        error = new javax.swing.JLabel();
        forgot_pass = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iniciar Sesión como Paciente");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Contraseña:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("ID Paciente:");

        id.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idMouseClicked(evt);
            }
        });

        submit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        submit.setText("Iniciar Sesión");
        submit.setMaximumSize(new java.awt.Dimension(163, 31));
        submit.setMinimumSize(new java.awt.Dimension(163, 31));
        submit.setPreferredSize(new java.awt.Dimension(163, 31));
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        pwd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pwd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pwdMouseClicked(evt);
            }
        });

        error.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        error.setText("Mensaje de Error");

        forgot_pass.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        forgot_pass.setText("¿Olvidado su Contraseña?");
        forgot_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgot_passActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(pwd))
                .addGap(48, 48, 48))
            .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(forgot_pass)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forgot_pass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        id.getAccessibleContext().setAccessibleName("ID");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // borrar el mensaje de error
        error.setText(" ");
        // extraer la identificación introducida por el usuario
        String identificacion = id.getText();
        // extraer la contraseña introducida por el usuario
        String password = String.valueOf(pwd.getPassword());
         
        Connection coneccion = null;
        // verificar si dejo algo en blanco
        if(identificacion.isEmpty()||password.isEmpty())
        {
            error.setText("¡Favor de no dejar espacios en blanco!");
        }
        else
        {
            try
            {
                coneccion = DriverManager.getConnection("jdbc:mysql://localhost:3306/MedExpress?autoReconnect=true&useSSL=false",DBUSER,YOURPASSWORD);
                // query para extraer la información del paciente
                String query = "select Pwd, Nombre, Apellidos from MedExpress.Pacientes where ID_Paciente ='" + identificacion +"'";
                Statement statement = coneccion.createStatement();
                ResultSet result = statement.executeQuery(query);
                // verificar si hubo un resultado
                while(result.next())
                {
                    // extraer la información del resultado
                    String pass = result.getString("Pwd");
                    String nombre = result.getString("Nombre");
                    String apellidos = result.getString("Apellidos");
                    String fullName = nombre + " " + apellidos;

                    // verificar si la contraseña introducida por el usuario coincide con la almacenada en la base de datos
                    if(password.equals(pass))
                    {
                        // borra el mensaje de error
                        error.setText("");
                        // mostrar mensaje de bienvenida
                        JOptionPane.showMessageDialog(null, "Bienvenido a MedExpress " + fullName);
                        // cerrar el GUI actual
                        dispose();
                        // crear una instancia del GUI que nos permite mostrar el menú principal del paciente
                        PatientUserForm paciente = new  PatientUserForm(identificacion);
                        // establecer el mensaje de bienvenida en el nuevo GUI
                        paciente.welcome.setText("<html>¿Qué desea hacer <BR>" + fullName + "?");
                        // hacer visible el nuevo GUI
                        paciente.setVisible(true);
                    }
                }
                
                if(!result.next())
                {//no consiguio nadie con el ID de usuario indicado
                    error.setText("<html>El  ID de paciente o la contraseña indicada es incorrecta.");
                }

                try{result.close();}catch(SQLException e){ /*blank intentionally*/}
                try{statement.close();}catch(SQLException e) {/*blank intentionally*/}
            }catch(SQLException e)
            {
                /*blank intentionally*/
            }
            finally
            {
                try
                {
                    if(coneccion != null)
                        coneccion.close();
                } catch(SQLException e)
                {
                    /*blank intentionally*/
                }
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void pwdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pwdMouseClicked
        // eliminar el contenido del encasillado de la contraseña
        pwd.setText("");
    }//GEN-LAST:event_pwdMouseClicked

    private void idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idMouseClicked
        // eliminar contenido del encasillado de la identificación
        id.setText("");
    }//GEN-LAST:event_idMouseClicked

    private void forgot_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgot_passActionPerformed
        // recuperar la identificación del usuario
        String identificacion = id.getText();
        // verificar que la identificación no esté vacía
        if(!identificacion.isEmpty())
        {
            // cerrar el GUI actual
            dispose();
            // crear una instancia del GUI que nos permite cambiar la contraseña del paciente
            ForgotPwdPacient change_pwd = new ForgotPwdPacient(id.getText());
            // hacer visible el GUI nuevo
            change_pwd.setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Favor de al menos llenar el ID de paciente.");
        }
    }//GEN-LAST:event_forgot_passActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel error;
    private javax.swing.JButton forgot_pass;
    private java.awt.TextField id;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPasswordField pwd;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
