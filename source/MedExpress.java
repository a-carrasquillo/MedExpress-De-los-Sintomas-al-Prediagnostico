import java.text.DecimalFormat;

/**GUI que nos permite recopilar la información necesaria para realizar el prediagnóstico
 *
 * @author a-carrasquillo
 */
public class MedExpress extends javax.swing.JFrame 
{
    // data fields
    private String id_paciente = "";
    private Patient_Info info;
    private boolean secondConstructor = false;
    
    /**Constructor por defecto
     * Crea un nuevo formulario MedExpress
     */
    public MedExpress() 
    {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    /**Constructor especial
     * Constructor utilizado si el paciente realizó inicio de sesión
     * @param info - objeto que contiene la información del paciente relacionada con el prediagnóstico
     * @param id_paciente - número de identificación del paciente
     */
    public MedExpress(Patient_Info info, String id_paciente) 
    {
        initComponents();
        this.setLocationRelativeTo(null);
        // copia la información del paciente
        this.info = new Patient_Info(info);
        this.id_paciente=id_paciente;
        // indicar que fue el segundo constructor el que fue utilizado
        secondConstructor = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        age = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        weight = new javax.swing.JSpinner();
        femenino = new javax.swing.JRadioButton();
        masculino = new javax.swing.JRadioButton();
        genero_label = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tos = new javax.swing.JCheckBox();
        fiebre = new javax.swing.JCheckBox();
        erupcion_piel = new javax.swing.JCheckBox();
        dificultad_respiratoria = new javax.swing.JCheckBox();
        dolor_fuerte_cuello = new javax.swing.JCheckBox();
        fatiga = new javax.swing.JCheckBox();
        dolor_pecho = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        analizar = new javax.swing.JButton();
        ulcera_genital = new javax.swing.JCheckBox();
        estrenimiento = new javax.swing.JCheckBox();
        aumento_sudor = new javax.swing.JCheckBox();
        perdida_peso = new javax.swing.JCheckBox();
        dolor_muscular = new javax.swing.JCheckBox();
        dolor_articulaciones = new javax.swing.JCheckBox();
        secrecion_nasal = new javax.swing.JCheckBox();
        nauseas = new javax.swing.JCheckBox();
        vomitos = new javax.swing.JCheckBox();
        picazon_piel = new javax.swing.JCheckBox();
        perdida_apetito = new javax.swing.JCheckBox();
        debilidad = new javax.swing.JCheckBox();
        debilidad_muscular = new javax.swing.JCheckBox();
        dolor_cabeza = new javax.swing.JCheckBox();
        diarrea = new javax.swing.JCheckBox();
        cansancio = new javax.swing.JCheckBox();
        manchas_piel = new javax.swing.JCheckBox();
        congestion_nasal = new javax.swing.JCheckBox();
        dolor_garganta = new javax.swing.JCheckBox();
        malestar_general = new javax.swing.JCheckBox();
        piel_roja = new javax.swing.JCheckBox();
        dolor_abdominal = new javax.swing.JCheckBox();
        sangrado_encias = new javax.swing.JCheckBox();
        go_back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MedExpress: Prediagnóstico");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Nombre:");

        name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Edad:");

        age.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        age.setModel(new javax.swing.SpinnerNumberModel(0, 0, 150, 1));
        age.setName("Edad"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Peso:");

        weight.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        weight.setModel(new javax.swing.SpinnerNumberModel(0, 0, 300, 1));

        femenino.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        femenino.setText("Femenino");
        femenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femeninoActionPerformed(evt);
            }
        });

        masculino.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        masculino.setText("Masculino");
        masculino.setToolTipText("");
        masculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masculinoActionPerformed(evt);
            }
        });

        genero_label.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        genero_label.setText("Género:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Síntomas:");

        tos.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tos.setText("Tos");

        fiebre.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        fiebre.setText("Fiebre");

        erupcion_piel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        erupcion_piel.setText("Erupciones en la piel");

        dificultad_respiratoria.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dificultad_respiratoria.setText("Dificultad respiratoria");

        dolor_fuerte_cuello.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_fuerte_cuello.setText("Dolor fuerte en el cuello");

        fatiga.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        fatiga.setText("Fatiga");

        dolor_pecho.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_pecho.setText("Dolor en la zona del pecho");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Años");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Libras");

        analizar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        analizar.setText("Analizar Síntomas");
        analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarActionPerformed(evt);
            }
        });

        ulcera_genital.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ulcera_genital.setText("Úlceras en el área de los genitales");

        estrenimiento.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        estrenimiento.setText("Estreñimiento ");
        estrenimiento.setMaximumSize(new java.awt.Dimension(159, 31));
        estrenimiento.setMinimumSize(new java.awt.Dimension(159, 31));
        estrenimiento.setPreferredSize(new java.awt.Dimension(159, 31));

        aumento_sudor.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        aumento_sudor.setText("Aumento del sudor");

        perdida_peso.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        perdida_peso.setText("Pérdida de peso");

        dolor_muscular.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_muscular.setText("Dolor muscular");

        dolor_articulaciones.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_articulaciones.setText("Dolor en las articulaciones");

        secrecion_nasal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        secrecion_nasal.setText("Secreciones nasales");

        nauseas.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nauseas.setText("Náuseas");

        vomitos.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        vomitos.setText("Vómitos");

        picazon_piel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        picazon_piel.setText("Picazón en la piel");

        perdida_apetito.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        perdida_apetito.setText("Pérdida de apetito");

        debilidad.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        debilidad.setText("Debilidad");

        debilidad_muscular.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        debilidad_muscular.setText("Debilidad muscular");

        dolor_cabeza.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_cabeza.setText("Dolor de cabeza");

        diarrea.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        diarrea.setText("Diarrea");

        cansancio.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cansancio.setText("Cansancio");

        manchas_piel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        manchas_piel.setText("Manchas en la piel");

        congestion_nasal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        congestion_nasal.setText("Congestión nasal");

        dolor_garganta.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_garganta.setText("Dolor de garganta");

        malestar_general.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        malestar_general.setText("Malestar general");

        piel_roja.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        piel_roja.setText("Piel roja");

        dolor_abdominal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dolor_abdominal.setText("Dolor abdominal");

        sangrado_encias.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sangrado_encias.setText("Sangrado de las encías");

        go_back.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        go_back.setText("Volver Atrás");
        go_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(go_back)
                        .addGap(167, 167, 167)
                        .addComponent(analizar))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dolor_muscular, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dolor_articulaciones, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9)
                                        .addGap(128, 128, 128)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fiebre)
                                    .addComponent(fatiga)
                                    .addComponent(tos))
                                .addGap(194, 194, 194)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(debilidad)
                                    .addComponent(perdida_apetito)
                                    .addComponent(debilidad_muscular)
                                    .addComponent(dolor_cabeza)
                                    .addComponent(diarrea)
                                    .addComponent(cansancio)
                                    .addComponent(manchas_piel)
                                    .addComponent(estrenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(congestion_nasal)
                                    .addComponent(picazon_piel))))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dificultad_respiratoria)
                            .addComponent(dolor_garganta)
                            .addComponent(malestar_general)
                            .addComponent(piel_roja)
                            .addComponent(dolor_abdominal)
                            .addComponent(sangrado_encias)
                            .addComponent(ulcera_genital)
                            .addComponent(dolor_pecho)
                            .addComponent(aumento_sudor)
                            .addComponent(dolor_fuerte_cuello)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(masculino)
                                .addGap(18, 18, 18)
                                .addComponent(femenino))
                            .addComponent(genero_label, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(erupcion_piel)
                    .addComponent(perdida_peso)
                    .addComponent(secrecion_nasal)
                    .addComponent(vomitos)
                    .addComponent(nauseas)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(genero_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(masculino)
                            .addComponent(femenino))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tos)
                    .addComponent(picazon_piel)
                    .addComponent(dolor_garganta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fiebre)
                    .addComponent(perdida_apetito)
                    .addComponent(dificultad_respiratoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fatiga)
                    .addComponent(debilidad)
                    .addComponent(malestar_general))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(erupcion_piel)
                    .addComponent(debilidad_muscular)
                    .addComponent(piel_roja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(perdida_peso)
                    .addComponent(dolor_cabeza)
                    .addComponent(dolor_abdominal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dolor_muscular)
                    .addComponent(diarrea)
                    .addComponent(sangrado_encias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dolor_articulaciones)
                    .addComponent(cansancio)
                    .addComponent(ulcera_genital))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secrecion_nasal)
                    .addComponent(manchas_piel)
                    .addComponent(dolor_pecho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nauseas)
                    .addComponent(estrenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aumento_sudor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vomitos)
                    .addComponent(congestion_nasal)
                    .addComponent(dolor_fuerte_cuello))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analizar)
                    .addComponent(go_back))
                .addGap(19, 19, 19))
        );

        perdida_peso.getAccessibleContext().setAccessibleName("perdida_peso");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void femeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femeninoActionPerformed
        /* al seleccionar el botón de femenino, si el de masculino estaba
        seleccionado, se deseleccionará automáticamente */
        if(masculino.isSelected())
        {
            masculino.setSelected(false); 
        }
    }//GEN-LAST:event_femeninoActionPerformed

    private void masculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masculinoActionPerformed
       /* al seleccionar el botón de masculino, si el de femenino estaba
        seleccionado, se deseleccionará automáticamente */
       if (femenino.isSelected())
       {
           femenino.setSelected(false);
       }
    }//GEN-LAST:event_masculinoActionPerformed

    private void analizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarActionPerformed
        // Declarar las variables a utilizar
        String nombre, genero;
        byte edad;
        int peso;
        
        // extraer el nombre del usuario
        nombre = this.name.getText();
        
        // determinar el género del usuario
        if (masculino.isSelected())
        {
            genero = "Masculino";
        }
        else if (femenino.isSelected())
        {
            genero = "Femenino";
        }
        else
        {
            genero = "No fue especificado.";
        }

        // se convierte el valor del JSpinner de edad de String a Byte
        edad = Byte.parseByte(this.age.getValue().toString());
        // se convierte el valor del JSpinner de peso de String a float
        peso = Integer.parseInt(this.weight.getValue().toString());
        
        // determinar si el segundo constructor fue utilizado
        if(secondConstructor)
        {
            info.setPeso(peso);
        }
        
        // crear una instancia de la clase que nos permite realizar el prediagnóstico
        N_Choose_K prediagnostico = new N_Choose_K();
        // enviar la edad para ser utilizada en el prediagnóstico
        prediagnostico.setEdad(edad);
        
        // determinar los síntomas que padece el paciente
        if (tos.isSelected())
            prediagnostico.setTos(true);
        if (fiebre.isSelected())
           prediagnostico.setFiebre(true);
        if(fatiga.isSelected())
            prediagnostico.setFatiga(true);
        if(erupcion_piel.isSelected())
            prediagnostico.setErup_Piel(true);
        if(perdida_peso.isSelected())
            prediagnostico.setPerdidaPeso(true);
        if(dolor_muscular.isSelected())
            prediagnostico.setDolor_Muscular(true);
        if(dolor_articulaciones.isSelected())
            prediagnostico.setDolor_Articulaciones(true);
        if(secrecion_nasal.isSelected())
            prediagnostico.setSecrecion_Nasal(true);
        if(nauseas.isSelected())
            prediagnostico.setNauseas(true);
        if(vomitos.isSelected())
            prediagnostico.setVomitos(true);
        if(picazon_piel.isSelected())
            prediagnostico.setPicazon(true);
        if(perdida_apetito.isSelected())
            prediagnostico.setPerdida_Apetito(true);
        if(debilidad.isSelected())
            prediagnostico.setDebilidad(true);
        if(debilidad_muscular.isSelected())
            prediagnostico.setDebilidad_Muscular(true);
        if(dolor_cabeza.isSelected())
            prediagnostico.setDolor_Cabeza(true);
        if(diarrea.isSelected())
            prediagnostico.setDiarrea(true);
        if(cansancio.isSelected())
            prediagnostico.setCansancio(true);
        if(manchas_piel.isSelected())
            prediagnostico.setManchas_Piel(true);
        if(estrenimiento.isSelected())
            prediagnostico.setEstrenimiento(true);
        if(congestion_nasal.isSelected())
            prediagnostico.setCongestion_Nasal(true);
        if(dolor_garganta.isSelected())
            prediagnostico.setDolor_Garganta(true);
        if(dificultad_respiratoria.isSelected())
            prediagnostico.setDificultad_Respiratoria(true);
        if(malestar_general.isSelected())
            prediagnostico.setMalestar_General(true);
        if(piel_roja.isSelected())
            prediagnostico.setPiel_Roja(true);
        if(dolor_abdominal.isSelected())
            prediagnostico.setDolor_Abdominal(true);
        if(sangrado_encias.isSelected())
            prediagnostico.setSangrado_Encias(true);
        if(ulcera_genital.isSelected())
            prediagnostico.setUlcera_Genital(true);
        if(aumento_sudor.isSelected())
            prediagnostico.setAumento_Sudor(true);
        if(dolor_pecho.isSelected())
            prediagnostico.setDolor_Pecho(true);
        if(dolor_fuerte_cuello.isSelected())
            prediagnostico.setDolor_Fuerte_Cuello(true);
        
       // realizar el prediagnóstico
       prediagnostico.detProbability();
       
       // declarar el GUI que se utilizará para mostrar el resultado del prediagnóstico
       Resultados result;
       // crear instancia de la clase que nos permite dar formato a un número con lugares decimales
       DecimalFormat f = new DecimalFormat("##.00");
       
       // verificar si el número de identificación del paciente no está vacío
       if(!id_paciente.isEmpty())
       {// inició sesión
           // instanciar el GUI que mostrará el resultado del prediagnóstico, con la información del paciente
           // por si desea enviar su información a una facilidad médica
           result = new Resultados(info, id_paciente);
           // definir variable con el listado de prediagnósticos con sus probabilidades
           String prediag = prediagnostico.getTop3PreDiag(0) + ", " + f.format(prediagnostico.getTop3Prob(0)*100) + "%; " + 
                                     prediagnostico.getTop3PreDiag(1) + ", " + f.format(prediagnostico.getTop3Prob(1)*100) + "%; " +
                                     prediagnostico.getTop3PreDiag(2) + ", " + f.format(prediagnostico.getTop3Prob(2)*100) + "%";
           // enviar la información del prediagnóstico
           result.setInfoPrediag(prediag);
       }
       else
       {// no inició sesión
           // instanciar el GUI que mostrará el resultado del prediagnóstico
           result = new Resultados();
           // ocultar el botón de enviar información a una facilidad médica
           result.send_info.setVisible(false);
       }
        
       // llenar la tabla de resultados
       for(int i = 0; i<3; i++)
       {
           // prediagnósticos
           result.resultados.setValueAt(prediagnostico.getTop3PreDiag(i), i, 0);
           // probabilidades
           result.resultados.setValueAt(f.format(prediagnostico.getTop3Prob(i)*100), i, 1);
           // clasificación
           result.resultados.setValueAt(prediagnostico.getTop3Categoria(i), i, 2);
           // donde debe ir
           if("Emergencia".equals(prediagnostico.getTop3Categoria(i)))
                result.resultados.setValueAt("Sala de Emergencias", i, 3);
           else
               result.resultados.setValueAt("Oficina Médica", i, 3);
       }
       // cerrar el GUI actual
       this.dispose();
       // hacer visible el GUI que muestra los resultados
       result.setVisible(true);
    }//GEN-LAST:event_analizarActionPerformed

    private void go_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_backActionPerformed
        // evaluar si se utilizó el segundo constructor
        if(secondConstructor)
        {
            // crear una instancia del GUI que nos permite mostrar el menú principal del paciente
            PatientUserForm paciente = new PatientUserForm(id_paciente);
            // cerrar el GUI actual
            this.dispose();
            // hacer visible el GUI nuevo
            paciente.setVisible(true);
        }
        else
        {
            // crear una instancia del GUI que nos permite mostrar el menú principal
            MedExpressDB menuPrincipal = new MedExpressDB();
            // cerrar el GUI actual
            this.dispose();
            // hacer visible el GUI nuevo
            menuPrincipal.setVisible(true);
        }
    }//GEN-LAST:event_go_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new MedExpress().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JSpinner age;
    private javax.swing.JButton analizar;
    private javax.swing.JCheckBox aumento_sudor;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.JCheckBox cansancio;
    private javax.swing.JCheckBox congestion_nasal;
    private javax.swing.JCheckBox debilidad;
    private javax.swing.JCheckBox debilidad_muscular;
    private javax.swing.JCheckBox diarrea;
    private javax.swing.JCheckBox dificultad_respiratoria;
    private javax.swing.JCheckBox dolor_abdominal;
    private javax.swing.JCheckBox dolor_articulaciones;
    private javax.swing.JCheckBox dolor_cabeza;
    private javax.swing.JCheckBox dolor_fuerte_cuello;
    private javax.swing.JCheckBox dolor_garganta;
    private javax.swing.JCheckBox dolor_muscular;
    private javax.swing.JCheckBox dolor_pecho;
    private javax.swing.JCheckBox erupcion_piel;
    private javax.swing.JCheckBox estrenimiento;
    private javax.swing.JCheckBox fatiga;
    protected javax.swing.JRadioButton femenino;
    private javax.swing.JCheckBox fiebre;
    protected javax.swing.JLabel genero_label;
    private javax.swing.JButton go_back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JCheckBox malestar_general;
    private javax.swing.JCheckBox manchas_piel;
    protected javax.swing.JRadioButton masculino;
    protected javax.swing.JTextField name;
    private javax.swing.JCheckBox nauseas;
    private javax.swing.JCheckBox perdida_apetito;
    private javax.swing.JCheckBox perdida_peso;
    private javax.swing.JCheckBox picazon_piel;
    private javax.swing.JCheckBox piel_roja;
    private javax.swing.JCheckBox sangrado_encias;
    private javax.swing.JCheckBox secrecion_nasal;
    private javax.swing.JCheckBox tos;
    private javax.swing.JCheckBox ulcera_genital;
    private javax.swing.JCheckBox vomitos;
    protected javax.swing.JSpinner weight;
    // End of variables declaration//GEN-END:variables
}
